[parameters]
name = test1            #name of the scenario/model run
cid =                   #index column for the 3 inventoried data sets (finv, expos, gels)
prec = 6                #float precision for calculations
ground_water = True     #whether to allow wsl < gel
felv = ground           #'datum' or 'ground': whether felv values provided in the inventory are heights or elevations
event_probs = ari       #format of event probabilities (in 'aeps' data file): 'ari' or 'aep'
ltail = extrapolate     #EAD extrapolation: left tail treatment code (low prob high damage)
rtail = 0.5             #EAD extrapolation: right trail treatment (high prob low damage)
drop_tails = False      #EAD extrapolation: whether to remove the extrapolated values before writing the per-asset results
integrate = trapz       #integration method to apply: trapz, simps 
as_inun = False         #flag whether to treat exposures as percent inundation
event_rels = mutEx		#assumption for calculated expected value on complex events
impact_units = impacts  #value to label impacts axis with (generally set by Dmg2)
apply_miti = False		#whether to apply mitigation algorithms

[dmg_fps]
curves =                #damage curve library filepath
finv =                  #inventory data filepath
expos =                 #exposure data filepath
gels =                  #ground elevation data filepath


[risk_fps]
dmgs =                  #damage data results filepath 
exlikes =               #secondary exposure likelihood data filepath
evals =                  #event probability data filepath

[validation] #flag that the inputs validator tool has checked all the inputs
risk1 = False
dmg2 = False
risk2 = False
risk3 = False

[results_fps]
attrimat02 =            #lvl2 attribution matrix fp (post dmg model)
attrimat03 =            #lvl3 attribution matrix fp (post risk model)
r_passet =             #per_asset results from the risk2 model
r_ttl =                #total results from risk2
eventypes =             #dataframe of aep, noFail, and rEventName

[plotting]
color = black           #line colour
linestyle = dashdot
linewidth = 2
alpha = 0.75            #0=transparent 1=opaque
marker = o
markersize = 4
fillstyle = none        #marker fill style
impactfmt_str = .2e     #python formatter to use for formatting the impact results values